//https://codeforces.com/edu/course/2/lesson/6/2/practice/contest/283932/problem/F
#include <bits/stdc++.h>
 
using namespace std;
#define ff(i , a, b) for(int i = a; i <= int(b); i++)
#define REP(i, a, b) for(int i = a; i >= int(b); i--)
#define MP make_pair
#define PB push_back
typedef long long ll;
typedef pair<int , int> pi;
const ll MAXN = 1e6 + 7;
string t , p;
vector<int> pos;
 
bool is_subsequence(string pat , string txt)
{
    int len_pat = pat.size() , len_txt = txt.size();
    if (len_txt < len_pat ) return false;
    int id = 0;
    ff(i , 0 , len_txt - 1)
    {
        if (txt[i] == pat[id]) id++;
    }
    if (id == len_pat) return true;
    else return false;
}
 
bool f(int m)
{
    int len = t.size();
    vector<bool> check(len , true);
    ff(i , 0 , m) check[pos[i] - 1] = false;
    string str;
    ff(i , 0 , len - 1) if (check[i]) str+=t[i];
    if (is_subsequence(p , str)) return true;
    else return false;
}
 
int  main()
{
    ios_base::sync_with_stdio(0);cin.tie(0);
    cin >> t >> p;
    int len_t = t.size() , len_p = p.size();
    pos.resize(len_t);
    ff(i , 0 , len_t - 1) cin >> pos[i];
    if (len_t == len_p) cout << 0;
    else if (!f(0)) cout << 0;
    else
    {
        int l = 0 , r = len_t - len_p - 1;
        int ans;
        while(r >= l)
        {
            int m = (l + r)/2;
            if (f(m)) ans = m , l = m + 1;
            else r = m - 1;
        }
        cout << ans + 1;
    }
    return 0;
}
