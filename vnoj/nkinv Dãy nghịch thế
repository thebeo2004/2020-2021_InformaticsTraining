//https://oj.vnoi.info/problem/nkinv
#include <bits/stdc++.h>

using namespace std;
#define ff(i , a, b) for (int i = a; i <= int(b);i++)
#define REP(i , a , b) for(int i = a; i >= int(b);i--)
typedef long long int ll;
const ll MAXN = 1e6+ 7;
int Segtree[MAXN];
void Update(int idx , int low , int high , int pos)
{
    if (low == high)
    {
        Segtree[pos]++;
        return;
    }
    int mid = (low+high)/2;
    if(idx <= mid) Update(idx , low , mid , 2*pos + 1);
    else Update(idx , mid + 1 , high , 2*pos + 2);
    Segtree[pos] = Segtree[2*pos+1] + Segtree[2*pos + 2];
}

int Sum_Query(int l , int r , int low , int high , int pos)
{
    if (low > r || high < l) return 0;
    if (low >= l && high <= r) return Segtree[pos];
    int mid = (low+high)/2;
    return (Sum_Query(l , r , low , mid , 2*pos + 1) +
            Sum_Query(l , r , mid + 1 , high , 2*pos + 2));
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int N;
    cin >> N;
    vector<int> v(N+1);
    int best = 0 , ans = 0;
    ff(i , 1 , N) cin >> v[i] , best = max(best , v[i]);
    best++;
    ff(i , 1 , N)
    {
        ans+=Sum_Query(v[i] + 1 , best , 0 , best , 0);
        Update(v[i] , 0 , best , 0);
    }
    cout << ans;

  return 0;
}
