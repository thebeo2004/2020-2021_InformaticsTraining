//https://codeforces.com/contest/615/problem/D
#include <bits/stdc++.h>
 
using namespace std;
#define ff(i , a, b) for(int i = a; i <= int(b); i++)
#define Rep(i, a, b) for(int i = a; i >= int(b); i--)
#define MP make_pair
#define PB push_back
typedef long long ll;
const ll MAXN = 2e5 + 7;
const ll INF = 1e9 + 7;
//{
    vector<ll> SegTree(4*MAXN , 1);
    void Update(int id , int low , int high , int pos , ll value)
    {
        if (low == high)
        {
            SegTree[pos] = value%(INF-1);
            return;
        }
        int mid = (low + high)/2;
        if (id <= mid) Update(id , low , mid , 2*pos + 1 , value);
        else Update(id , mid + 1 , high , 2*pos + 2 , value);
        SegTree[pos] = (SegTree[2*pos + 1]*SegTree[2*pos + 2])%(INF - 1);
    }
    ll query(int l , int r , int low , int high , int pos)
    {
        if (low > r || high < l) return 1;
        if (low >= l && high <= r) return SegTree[pos];
        int mid = (low + high)/2;
        return (query(l , r, low , mid , 2*pos + 1)*query(l , r, mid + 1 , high ,2*pos + 2)%(INF - 1));
    }
//}
ll modular(ll a , ll k) // calculate (a^k)%mod
{
    if (k == 0) return 1;
    ll res = modular(a , k/2);
    if (k%2 == 0) return (res*res)%INF;
    else return (a*res%INF)*res%INF;
}
vector<int> cnt(MAXN , 0);
void solve()
{
    int m;
    cin >> m;
    ff(i , 1 , m)
    {
        int x;
        cin >> x;
        cnt[x]++;
    }
    ff(i , 0 , MAXN - 1) Update(i , 0 , MAXN - 1 , 0 , cnt[i] + 1);
    ll ans = 1;
    ff(i , 1 , MAXN - 5)
    {
        ll Pow = query(0 , i - 1 , 0 ,MAXN - 1 , 0)*query(i + 1 , MAXN - 1 , 0 , MAXN - 1 , 0)%(INF - 1);
        ll value = modular(i , Pow) , res = value;
        ff(j , 1 , cnt[i]) ans = ans*res%INF , res = res*value%INF;
    }
    cout << ans;
}
 
int main()
{
    ios_base::sync_with_stdio(0);cin.tie(0);
    //freopen("X.inp" , "r" , stdin);
    //freopen("Y.out" , "w" , stdout);
    solve();
    return 0;
}
