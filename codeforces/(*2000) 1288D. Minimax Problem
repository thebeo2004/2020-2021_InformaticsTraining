//https://codeforces.com/contest/1288/problem/D
#include <bits/stdc++.h>

using namespace std;
#define ff(i , a, b) for(int i = a; i <= int(b); i++)
#define Rep(i, a, b) for(int i = a; i >= int(b); i--)
#define MP make_pair
#define PB push_back
typedef long long ll;
const ll MAXN = 4e5 + 7;
const ll INF = 1e9 + 7;
const ll mod = 998244353;
const ll base = 2;
int arr[MAXN][10];
vector<int> check(300);
void recursion(vector<int> sync , int id , ll hash_val , bool &ok ,int &pos)
{
    if (!ok)
    {
        if (id == int(sync.size()))
        {
            if (check[hash_val] != 0) ok = true , pos = check[hash_val];
        }
        else
        {
            if (sync[id] == 0) recursion(sync , id + 1 , hash_val*base + 1 , ok , pos);
            else
            {
                recursion(sync , id + 1 , hash_val*base + 0, ok , pos);
                recursion(sync , id + 1 , hash_val*base + 1 , ok , pos);
            }
        }
    }
}
bool f(int val , int n , int m , int &id1 , int &id2)
{
    ff(i , 0 , 300 - 2) check[i] = 0;
    ff(i , 1 , n)
    {
        ll hash_val = 0;
        vector<int> sync;
        int cnt = 0;
        ff(j , 1 , m)
        {
            ll x;
            if (arr[i][j] >= val) x = 1 , cnt++;
            else x = 0;
            sync.PB(x);
            hash_val = hash_val*base + x;
        }
        if (cnt == m)
        {
            id1 = i;
            id2 = i;
            return true;
        }
        if (check[hash_val] == 0)
        {
            bool ok = false;
            int pos;
            recursion(sync , 0 , 0 , ok , pos);
            if (ok)
            {
                id1 = pos;
                id2 = i;
                return true;
            }
            check[hash_val] = i;
        }
    }
    return false;
}
void solve()
{
    int n , m;
    cin >> n >> m;
    ff(i , 1 , n) ff(j , 1 , m) cin >> arr[i][j];
    if (n == 1) cout << 1 << " " << 1;
    else
    {
        int l = 0 , r = INF;
        int ans;
        int id1 , id2;
        while(r >= l)
        {
            int mid = (l + r)/2;
            if (f(mid , n , m , id1 , id2)) ans = mid , l = mid + 1;
            else r = mid - 1;
        }
        //cout << ans << "\n";
        cout << id1 << " " << id2;
    }
}
int main()
{
    ios_base::sync_with_stdio(0);cin.tie(0);
    //freopen("X.inp" , "r" , stdin);
    //freopen("Y.out" , "w" , stdout);
    solve();

    return 0;
}
