// https://codeforces.com/edu/course/2/lesson/4/3/practice/contest/274545/problem/A
#include <bits/stdc++.h>
 
using namespace std;
 
#define ff(i , a, b) for (int i = a; i <= b; i++)
#define REP(i ,a, b) for (int i = a; i >= b; i--)
 
const int MAXN = 1e6;
 
vector<int> SegTree(MAXN , 0) , v;
 
void Update(int idx , int low , int high , int pos)
{
    if (low == high)
    {
        SegTree[pos] = 1;
        return;
    }
    int mid = (low+high)/2;
    if (idx <= mid) Update(idx , low , mid , 2*pos+1);
    else Update(idx , mid + 1 , high , 2*pos+2);
    SegTree[pos] = SegTree[2*pos+1] + SegTree[2*pos+2];
}
 
int Sum_Query(int l , int r, int low , int high , int pos)
{
    if (high < l) return 0;
    if (low >= l && high <= r) return SegTree[pos];
    int mid = (low+high)/2;
 
    return (Sum_Query(l , r, low , mid , 2*pos+1) +
            Sum_Query(l , r, mid + 1 , high , 2*pos + 2));
}
 
 
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);cout.tie(0);
 
    int n;
    cin >> n;
 
    ff(i , 0 , n - 1)
    {
        int x;
        cin >> x;
        v.push_back(x);
    }
 
    ff(i , 0 , n - 1)
    {
        if (v[i] == n) cout << 0 << " ";
        else cout << Sum_Query(v[i] - 1, n - 1 , 0 , n - 1 , 0) << " ";
        Update(v[i] - 1 , 0 , n - 1 , 0);
    }
 
 
    return 0;
}
